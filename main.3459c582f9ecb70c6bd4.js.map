{"version":3,"file":"main.3459c582f9ecb70c6bd4.js","mappings":"8GAAaA,EAAM,CACjBC,aAAc,GACdC,WAAY,+BACZC,eAAgB,IAChBC,cAAe,CACbC,QAAS,YACTC,OAAQ,gBACRC,OAAQ,eACRC,OAAQ,UACRC,OAAQ,eACRC,OAAQ,UACRC,QAAS,YACTC,QAAS,WACTC,OAAQ,YACRC,OAAQ,WACRC,OAAQ,WACRC,OAAQ,WACRC,OAAQ,SACRC,OAAQ,UAEVC,eAAgB,CAAC,SAAS,UAAW,UACrCC,QAAS,CACPC,WAAY,aACZC,WAAY,e,0GCnBhB,IACIC,EADAC,GAAc,E,mvBC4BlB,IAAMpB,EAA8BJ,EAAII,cAClCgB,EAAUpB,EAAIoB,QAEdK,EAAW,SAACC,GAMhB,IALA,IAAMC,EAAaC,OAAOC,KAAKzB,GACzB0B,EAAgB,CACpBC,OAAQ,IAAIC,IAAIN,EAAYA,EAAUK,OAAS/B,EAAImB,gBACnDQ,WAAY,IAEd,MAAuBA,EAAvB,eAAmC,CAA9B,IAAMM,EAAQ,KACjBH,EAAMH,WAAWM,GAAY,CAC3BC,KAAM9B,EAAc6B,GACpBE,OAAQT,EAAY,EAAIA,EAAUC,WAAWM,GAAUE,QAAU,GACjEC,KAAMV,EAAY,EAAIA,EAAUC,WAAWM,GAAUG,MAAQ,IAGjE,OAAON,GAGHO,EAAyC,SAACP,EAAOQ,GACrD,OAAQA,EAAOC,MACb,KAAKnB,EAAQC,WACX,IAAMmB,EAAUF,EAAOG,QACvB,IAAKC,MAAMC,QAAQH,GAAU,OAAOV,EACpC,IAAMc,EAAWnB,EAASK,GAW1B,IAAK,IAAMG,KAVXO,EAAQK,SAAQ,SAACC,GACf,IAAMC,EAAaH,EAASjB,WAAWmB,EAAKE,QAAQb,OAC9Cc,EAAWL,EAASjB,WAAWmB,EAAKE,QAAQZ,KAC9Ca,EAASA,EAASC,OAAS,KAAOJ,EAAKK,MACzCJ,EAAWA,EAAWG,OAAS,GAAK,IAAIE,KAAKN,EAAKO,WAAWC,mBAAmB,UAEhFP,EAAWQ,KAAK,IAAIH,KAAKN,EAAKO,WAAWC,mBAAmB,UAC5DL,EAASM,KAAKT,EAAKK,WAGAP,EAASjB,WAAY,CAC1C,IAAMuB,EAASN,EAASjB,WAAWM,GAAUE,OAAOe,OAChDA,EAASlD,EAAIC,eACf2C,EAASjB,WAAWM,GAAUE,OAAOqB,OAAO,EAAGN,EAASlD,EAAIC,cAC5D2C,EAASjB,WAAWM,GAAUG,KAAKoB,OAAO,EAAGN,EAASlD,EAAIC,eAG9D,OAAO2C,EAET,KAAKxB,EAAQE,WACX,IAAM,EAAWG,EAASK,GAM1B,MALI,WAAYQ,EAAOG,UACrBH,EAAOG,QAAQV,OACX,EAASA,OAAO0B,IAAInB,EAAOG,QAAQO,QACnC,EAASjB,OAAT,OAAuBO,EAAOG,QAAQO,SAErC,EAET,QACE,MAAM,IAAIU,MAAM,kBAIhBC,EAAgBlC,IAChBmC,EAA0C,kBAAMD,GAIhDE,EAAY,SAACC,GAAD,OAChB,SAAC1B,GAAD,OACE0B,EAAS,CAACvB,KAAMvC,EAAIoB,QAAQC,WAAYoB,QAASL,MAC/C2B,EAAY,SAACD,GAAD,OAChB,gBAAEd,EAAF,EAAEA,OAAQjB,EAAV,EAAUA,OAAV,OACE+B,EAAS,CAACvB,KAAMvC,EAAIoB,QAAQE,WAAYmB,QAAS,CAACO,OAAAA,EAAQjB,OAAAA,OAExDiC,EAAgB,gBAAoB,CACxCC,WAAW,EACXC,OAAQP,EACRG,SAAU,CACRD,UAAWA,EAAUD,GACrBG,UAAWA,EAAUH,MAInB,SAAUO,EAAV,GAAoE,I,IAAlCC,EAAkC,EAAlCA,SACtC,G,GAA2B,IAAAC,YAAWhC,EAASZ,K,EAA/C,E,miBAAOyC,EAAP,KAAeJ,EAAf,KAGMQ,EAAQ,CACZL,UD7GU,SAAwBJ,GACpC,M,k1BAAA,EAAkC,IAAAU,WAAS,GAA3C,GAAON,EAAP,KAAkBO,EAAlB,KAEA,SAASC,IACPC,aAAanD,GACbiD,GAAa,GACRhD,IACHmD,WAAWC,EAAe5E,EAAIG,gBAC9BqB,GAAc,GAIlB,SAASoD,IACP,IAAMC,EAAS,IAAIC,UAAU9E,EAAIE,YAC3B6E,EAAO,kBAAMF,EAAOG,KAAK,SAoC/B,OAlCAxD,GAAc,EAEdqD,EAAOI,OAAS,WACd1D,EAAcoD,WAAWI,EAAM/E,EAAIG,gBACnCqE,GAAa,GACbK,EAAOG,KAAKE,KAAKC,UAAU,CACzBC,GAAI,YACJC,KAAMzD,OAAOC,KAAK7B,EAAII,eAAekF,KAAI,SAACrD,GAAD,sBAAuBA,UAIpE4C,EAAOU,UAAY,SAACC,GAClBd,aAAanD,GACbA,EAAcoD,WAAWI,EAAM/E,EAAIG,gBACnC,IACE,IAAMiC,EAAO8C,KAAKO,MAAMD,EAAIpD,MAC5ByB,EAAUzB,EAAKA,MACf,MAAOsD,GACU,SAAbF,EAAIpD,OACNuD,QAAQC,MAAMF,GACdb,EAAOgB,WAKbhB,EAAOiB,QAAU,SAACN,GAChBG,QAAQC,MAAMJ,GACdf,KAGFI,EAAOkB,QAAU,WACftB,KAGK,kBAAMI,EAAOgB,SAKtB,OAFA,IAAAG,WAAUpB,EAAe,IAElBX,ECmDWgC,CAAapC,EAAUC,IAIvCI,OAAAA,EACAJ,SAAU,CACRD,UAAWA,EAAUC,GACrBC,UAAWA,EAAUD,KAIzB,OACE,gBAACE,EAAckC,SAAQ,CAAC5B,MAAOA,GAC5BF,GAKA,IAAM+B,EAAmB,kBAAM,IAAAC,YAAWpC,IC5HjD,SAASqC,EAAT,GAAwC,IAArBrD,EAAqB,EAArBA,OAAQG,EAAa,EAAbA,MACzB,OACE,uBAAKmD,UAAU,cAAcC,IAAKvD,GAChC,sBAAIsD,UAAU,sCAAsCtD,EAAc,MAClE,sBAAIsD,UAAU,8CAA8CnD,IAKlE,MAAe,OAAWkD,GAAS,SAACG,EAAWC,GAAZ,OAA0BD,EAAUrD,QAAUsD,EAAUtD,SCZ7E,SAAUuD,IACtB,IAAOxC,EAAUiC,IAAVjC,OAEP,OACE,sBAAIoC,UAAU,iDACX1E,OAAOC,KAAKqC,EAAOvC,YAAY2D,KAAI,SAACtC,GAAD,OAClC,gBAAC,EAAO,CACNA,OAAQA,EACRG,MAAOe,EAAOvC,WAAWqB,GAAQZ,KAAK8B,EAAOvC,WAAWqB,GAAQZ,KAAKc,OAAS,GAC9EqD,IAAKvD,OAGRpB,OAAOC,KAAKqC,EAAOvC,YAAY2D,KAAI,SAACtC,GAAD,OAClC,gBAAC,EAAO,CACNA,OAAQA,EACRG,MAAOe,EAAOvC,WAAWqB,GAAQZ,KAAK8B,EAAOvC,WAAWqB,GAAQZ,KAAKc,OAAS,GAC9EqD,IAAKvD,QCjBD,SAAU2D,IACtB,IAAO1C,EAAakC,IAAblC,UAEP,OAAO,IAAA2C,UAAQ,kBACb,qBAAGN,UAAU,oDACVrC,EAAY,GAAK,wBAAMqC,UAAU,uCAAhB,iCAAoF,2BAA+B,uBACrI,wBAAMA,UAAU,gBAAgBO,MAAO,CAACC,gBAAiB7C,EAAY,UAAY,aACjF,oDACA,wBAAMqC,UAAU,mBAAmBrC,EAAY,SAAW,cAE3D,CAACA,I,aCRN,cAAe,KAAa,KAAc,KAAgB,KAAa,KAAe,KAAQ,KAE9F,IAAM8C,EAAe,SAACC,GAAD,MAAwC,CAC3D7E,OAAQ6E,EAAW7E,OACnB8E,SAAU,CAAC,CACTC,MAAOF,EAAW9E,KAClBE,KAAM4E,EAAW5E,SAwFrB,SAAS+E,EAAT,GAA0D,IAAhCjF,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,KAChCgF,GAAY,IAAAC,QAA0B,MACtCC,GAAW,IAAAD,QAAY,MAe7B,OAbA,IAAArB,YAAU,W,MACFuB,EAAuB,QAAjB,EAAAH,EAAUI,eAAO,eAAEC,WAAW,MACtCF,IACFD,EAASE,QAAU,IAAI,KAAMD,EA1F1B,CACLhF,KAAM,OACNH,KAAM2E,EAwFwC,CAAE7E,KAAAA,EAAMC,OAAAA,EAAQC,KAAAA,IAvF9DsF,QAAS,CACPC,YAAY,EACZC,YAAa,CACXC,WAAW,GAEbC,OAAQ,CACNC,EAAG,CACDC,SAAS,EACTC,KAAM,CACJC,UAAW,GACXC,YAAa,UACbC,iBAAiB,GAEnBC,MAAO,CACLC,gBAAiB,GACjBC,YAAa,EACbC,KAAM,CACJC,OAAQ,YACRC,KAAM,GACNC,OAAQ,OAEVC,MAAO,YAGXC,EAAG,CACDb,SAAS,EACTC,KAAM,CACJC,UAAW,GACXC,YAAa,UACbC,iBAAiB,GAEnBC,MAAO,CACLC,gBAAiB,GACjBE,KAAM,CACJC,OAAQ,YACRC,KAAM,GACNC,OAAQ,OAEVC,MAAO,aAIbE,SAAU,CACRC,KAAM,CACJC,uBAAwB,WACxBC,KAAM,CACJC,OAAQ,SACRC,MAAO,6BAETC,YAAa,EACbjB,YAAa,WAEfkB,MAAO,CACLC,OAAQ,EACRC,YAAa,EACbpB,YAAa,UACbrB,gBAAiB,6BAGrB0C,QAAS,CACPC,OAAQ,CACNzB,SAAS,GAEX0B,QAAS,CACPC,UAAW,CACTlB,OAAQ,aAEVmB,SAAU,CACRnB,OAAQ,aAEVoB,eAAe,IAGnBC,UAAW,CACTC,SAAU,SAed,KAEF,IAAA/D,YAAU,WACHsB,EAASE,UACdF,EAASE,QAAQpF,KAAO2E,EAAa,CAAE7E,KAAAA,EAAMC,OAAAA,EAAQC,KAAAA,IACrDkF,EAASE,QAAQwC,aAIjB,sBAAI1D,UAAU,wBACZ,sBAAIA,UAAU,4BAA4BpE,EAAgB,UAC1D,0BAAQoE,UAAU,gBAAgB2D,IAAK7C,KAK7C,IAAM8C,EAAU,SAAC1D,EAAuBC,GACtC,GAAID,EAAUrE,OAAOe,SAAWuD,EAAUtE,OAAOe,OAAQ,OAAO,EAEhE,IAAK,IAAIiH,EAAI,EAAGA,GAAK3D,EAAUrE,OAAOe,OAAQiH,IAC5C,GAAI3D,EAAUrE,OAAOgI,KAAO1D,EAAUtE,OAAOgI,GAAI,OAAO,EAG1D,OAAO,GAGT,EAAe,OAAWhD,EAAgB+C,GClI5B,SAAUE,IACtB,IAAOlG,EAAUiC,IAAVjC,OAEP,OACE,sBAAIoC,UAAU,cACV1E,OAAOC,KAAKqC,EAAOvC,YAAY2D,KAAI,SAACtC,GAClC,GAAIkB,EAAOnC,OAAOsI,IAAIrH,GAAS,CAC7B,IAAMf,EAAWiC,EAAOvC,WAAWqB,GACnC,OAAO,gBAACsH,EAAK,CACH/D,IAAKvD,EACLd,KAAMD,EAASC,KACfC,OAAQF,EAASE,OACjBC,KAAMH,EAASG,YCNvB,SAAUmI,EAAV,GAA6D,IAAxCvH,EAAwC,EAAxCA,OAAQd,EAAgC,EAAhCA,KAAMsI,EAA0B,EAA1BA,QAASzG,EAAiB,EAAjBA,UAMxD,OACE,sBAAIuC,UAAU,6BACZ,yBACEA,UAAU,YACVmE,GAAE,mBAAczH,GAChB0H,SAVe,SAAClF,GACpBA,EAAI0D,OAAOyB,OACX5G,EAAU,CAACf,OAAAA,EAAQjB,QAASyI,KASxBA,QAASA,EACTjI,KAAK,aAEP,yBAAO+D,UAAU,0BAA0BsE,QAAO,mBAAc5H,IAAWd,ICrBnE,SAAU2I,IACtB,MAAwC1E,IAAjCjC,EAAP,EAAOA,OAAmBH,EAA1B,EAAeD,SAAWC,UAE1B,OAAO,IAAA6C,UAAQ,WACb,OACE,wBAAMtE,OAAO,KACX,sBAAIgE,UAAU,mBAAiB,6BAC/B,sBAAIA,UAAU,8CAEV1E,OAAOC,KAAKqC,EAAOvC,YAAY2D,KAAI,SAACtC,GAAD,OACjC,gBAACuH,EAAQ,CACPvH,OAAQA,EACRd,KAAMgC,EAAOvC,WAAWqB,GAAQd,KAChCqE,IAAKvD,EACLwH,QAAStG,EAAOnC,OAAOsI,IAAIrH,GAC3Be,UAAWA,WAOtB,CAACG,EAAOnC,OAAO2G,OCjBN,SAAUoC,IACtB,OACE,gBAAC3G,EAAqB,KACpB,uBAAKmC,UAAU,iCACb,0BAAQA,UAAU,iCAChB,uBAAKA,UAAU,wBACb,gBAACI,EAAO,QAGZ,wBAAMJ,UAAU,mCACd,sBAAIA,UAAU,8CAA4C,yBAC1D,uBAAKA,UAAU,sBACb,2BAASA,UAAU,wBACjB,uBAAKA,UAAU,yCACb,sBAAIA,UAAU,4BAA0B,iBACxC,gBAACuE,EAAQ,QAGb,2BAASvE,UAAU,gBACjB,sBAAIA,UAAU,mBAAiB,UAC/B,gBAAC8D,EAAS,QAGd,gBAACzD,EAAO,OAEV,0BAAQL,UAAU,yBAChB,uBAAKA,UAAU,yBACb,qBAAGA,UAAU,0CAA0CyE,KAAK,wBAAwB7B,OAAO,SAAS8B,IAAI,cAAY,qBC9BhI,IAAAC,QAAO,gBAACH,EAAG,MAAKI,SAASC,eAAe,W","sources":["webpack:///./src/config.ts","webpack:///./src/hooks/useWebsocket.ts","webpack:///./src/hooks/Context.tsx","webpack:///./src/components/TopItem/TopItem.tsx","webpack:///./src/components/TopList/TopList.tsx","webpack:///./src/components/WsLight/WsLight.tsx","webpack:///./src/components/Chart/Chart.tsx","webpack:///./src/components/ChartList/ChartList.tsx","webpack:///./src/components/Checkbox/Checkbox.tsx","webpack:///./src/components/Controls/Controls.tsx","webpack:///./src/App.tsx","webpack:///./src/index.tsx"],"sourcesContent":["export const APP = {\n  TRADES_LIMIT: 80,\n  SOCKET_URL: 'wss://ws.bitmex.com/realtime',\n  SOCKET_TIMEOUT: 5000,\n  CURRENCY_NAME: {\n    AVAXUSD: 'Avalanche',\n    AXSUSD: 'Axie Infinity',\n    BNBUSD: 'Binance Coin',\n    XBTUSD: 'Bitcoin',\n    BCHUSD: 'Bitcoin Cash',\n    ADAUSD: 'Cardano',\n    LINKUSD: 'Chainlink',\n    DOGEUSD: 'Dogecoin',\n    EOSUSD: 'EOS Token',\n    ETHUSD: 'Etherium',\n    LTCUSD: 'Litecoin',\n    DOTUSD: 'Polkadot',\n    XRPUSD: 'Ripple',\n    SOLUSD: 'Solana',\n  },\n  DEFAULT_CHARTS: ['XBTUSD','DOGEUSD', 'ETHUSD'],\n  ACTIONS: {\n    SET_TRADES: 'SET_TRADES',\n    SET_CHARTS: 'SET_CHARTS',\n  },\n};\n\nexport interface CurrencyName {\n  [c: string] : string,\n}\n","import { useState, useEffect } from 'react';\nimport { APP } from '../config';\nimport { DataItem } from './Context';\n\nlet isReconnect = false;\nlet pingTimeout: ReturnType<typeof setTimeout>;\n\nexport default function useWebsocket (setTrades: (data: DataItem[]) => void) {\n  const [isWsAlive, setIsWsAlive] = useState(false);\n\n  function onWsClose () {\n    clearTimeout(pingTimeout);\n    setIsWsAlive(false);\n    if (!isReconnect) {\n      setTimeout(initWebsocket, APP.SOCKET_TIMEOUT);\n      isReconnect = true;\n    }\n  }\n\n  function initWebsocket () {\n    const socket = new WebSocket(APP.SOCKET_URL);\n    const ping = () => socket.send('ping');\n\n    isReconnect = false;\n\n    socket.onopen = () => {\n      pingTimeout = setTimeout(ping, APP.SOCKET_TIMEOUT);\n      setIsWsAlive(true);\n      socket.send(JSON.stringify({\n        op: 'subscribe',\n        args: Object.keys(APP.CURRENCY_NAME).map((currency) => `trade:${currency}`),\n      }));\n    };\n\n    socket.onmessage = (evt) => {\n      clearTimeout(pingTimeout);\n      pingTimeout = setTimeout(ping, APP.SOCKET_TIMEOUT);\n      try {\n        const data = JSON.parse(evt.data);\n        setTrades(data.data);\n      } catch (err) {\n        if (evt.data !== 'pong') {\n          console.error(err);\n          socket.close();\n        }\n      }\n    };\n\n    socket.onerror = (evt) => {\n      console.error(evt);\n      onWsClose();\n    };\n\n    socket.onclose = () => {\n      onWsClose();\n    };\n\n    return () => socket.close();\n  }\n\n  useEffect(initWebsocket, []);\n\n  return isWsAlive;\n}\n","import React, { useReducer, useContext } from 'react';\nimport { APP, CurrencyName } from '../config';\nimport useWebsocket from './useWebsocket';\n\nexport interface TradesItem {\n  name: string,\n  labels: string[],\n  data: number[],\n}\n\ninterface Trades {\n  active: Set<string>,\n  currencies: {\n    [c: string]: TradesItem,\n  },\n}\n\nexport interface DataItem {\n  symbol: string,\n  price: number,\n  timestamp: string,\n}\n\ninterface ChartItem {\n  symbol: string,\n  active: boolean,\n}\n\ntype Action =\n  | {type: string, payload: DataItem[]}\n  | {type: string, payload: ChartItem};\n\nconst CURRENCY_NAME: CurrencyName = APP.CURRENCY_NAME;\nconst ACTIONS = APP.ACTIONS;\n\nconst getState = (prevState?: Trades) => {\n  const currencies = Object.keys(CURRENCY_NAME);\n  const state: Trades = {\n    active: new Set(prevState ? prevState.active : APP.DEFAULT_CHARTS),\n    currencies: {},\n  };\n  for (const currency of currencies) {\n    state.currencies[currency] = {\n      name: CURRENCY_NAME[currency],\n      labels: prevState ? [...prevState.currencies[currency].labels] : [],\n      data: prevState ? [...prevState.currencies[currency].data] : [],\n    };\n  }\n  return state;\n};\n\nconst reducer: React.Reducer<Trades, Action> = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.SET_TRADES: {\n      const newData = action.payload;\n      if (!Array.isArray(newData)) return state;\n      const newState = getState(state);\n      newData.forEach((item: DataItem) => {\n        const prevLabels = newState.currencies[item.symbol].labels;\n        const prevData = newState.currencies[item.symbol].data;\n        if (prevData[prevData.length - 1] === item.price) {\n          prevLabels[prevLabels.length - 1] = new Date(item.timestamp).toLocaleTimeString('it-IT');\n        } else {\n          prevLabels.push(new Date(item.timestamp).toLocaleTimeString('it-IT'));\n          prevData.push(item.price);\n        }\n      });\n      for (const currency in newState.currencies) {\n        const length = newState.currencies[currency].labels.length;\n        if (length > APP.TRADES_LIMIT) {\n          newState.currencies[currency].labels.splice(0, length - APP.TRADES_LIMIT);\n          newState.currencies[currency].data.splice(0, length - APP.TRADES_LIMIT);\n        }\n      }\n      return newState;\n    }\n    case ACTIONS.SET_CHARTS: {\n      const newState = getState(state);\n      if ('symbol' in action.payload) {\n        action.payload.active\n          ? newState.active.add(action.payload.symbol)\n          : newState.active.delete(action.payload.symbol);\n      }\n      return newState;\n    }\n    default:\n      throw new Error('from reducer');\n  }\n};\n\nconst defaultTrades = getState();\nconst defaultDispatch: React.Dispatch<Action> = () => defaultTrades;\n\nexport type setCharts = ({symbol, active}: ChartItem) => void;\n\nconst setTrades = (dispatch: React.Dispatch<Action>) =>\n  (data: DataItem[]) =>\n    dispatch({type: APP.ACTIONS.SET_TRADES, payload: data});\nconst setCharts = (dispatch: React.Dispatch<Action>) =>\n  ({symbol, active}: ChartItem) =>\n    dispatch({type: APP.ACTIONS.SET_CHARTS, payload: {symbol, active}});\n\nconst TradesContext = React.createContext({\n  isWsAlive: false,\n  trades: defaultTrades,\n  dispatch: {\n    setTrades: setTrades(defaultDispatch),\n    setCharts: setCharts(defaultDispatch),\n  },\n});\n\nexport function TradesContextProvider ({children}: {children: JSX.Element}): JSX.Element {\n  const [trades, dispatch] = useReducer(reducer, getState());\n  const isWsAlive = useWebsocket(setTrades(dispatch));\n\n  const value = {\n    isWsAlive,\n    trades,\n    dispatch: {\n      setTrades: setTrades(dispatch),\n      setCharts: setCharts(dispatch),\n    }\n  };\n\n  return (\n    <TradesContext.Provider value={value}>\n      {children}\n    </TradesContext.Provider>\n  );\n}\n\nexport const useTradesContext = () => useContext(TradesContext);\n","import React from 'react';\n\ninterface Props {\n  symbol: string,\n  price: number\n}\n\nfunction TopItem ({symbol, price}: Props) {\n  return (\n    <div className=\"d-flex me-3\" key={symbol}>\n      <dt className=\"me-1 text-shadow-primary fw-normal\">{symbol}: </dt>\n      <dd className=\"top-item-number mb-0 text-shadow-secondary\">{price}</dd>\n    </div>\n  );\n}\n\nexport default React.memo(TopItem, (prevProps, nextProps) => prevProps.price === nextProps.price)\n","import React from 'react';\nimport { useTradesContext } from '../../hooks/Context';\nimport TopItem from '../TopItem/TopItem';\n\nexport default function TopList (): JSX.Element {\n  const {trades} = useTradesContext();\n\n  return (\n    <dl className=\"list-group list-group-horizontal marquee-line\">\n      {Object.keys(trades.currencies).map((symbol) => (\n        <TopItem\n          symbol={symbol}\n          price={trades.currencies[symbol].data[trades.currencies[symbol].data.length - 1]}\n          key={symbol}\n        />\n      ))}\n      {Object.keys(trades.currencies).map((symbol) => (\n        <TopItem\n          symbol={symbol}\n          price={trades.currencies[symbol].data[trades.currencies[symbol].data.length - 1]}\n          key={symbol}\n        />\n      ))}\n    </dl>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { useTradesContext } from '../../hooks/Context';\n\nexport default function WsLight (): JSX.Element {\n  const {isWsAlive} = useTradesContext();\n\n  return useMemo(() => (\n    <p className=\"box position-fixed bottom-0 end-0 small p-2 mb-0\">\n      {isWsAlive ? '' : <span className=\"d-block mb-3 text-warning fw-normal\">Please, wait for reconnection <br/>or reaload the page</span>}\n      <span className=\"ws-light me-2\" style={{backgroundColor: isWsAlive ? '#199d00' : '#83012f'}}></span>\n      <span>WebSocket connection</span>\n      <span className=\"visually-hidden\">{isWsAlive ? 'online' : 'offline'}</span>\n    </p>\n  ), [isWsAlive]);\n}\n","import React, { useRef, useEffect } from 'react';\nimport { Chart, LineElement, PointElement, LineController, LinearScale, CategoryScale, Filler, Tooltip } from 'chart.js';\nimport { ChartConfiguration, ChartData } from 'chart.js/types/index.esm';\nimport { TradesItem } from '../../hooks/Context';\n\nChart.register(LineElement, PointElement, LineController, LinearScale, CategoryScale, Filler, Tooltip);\n\nconst getChartData = (tradesItem: TradesItem): ChartData => ({\n  labels: tradesItem.labels,\n  datasets: [{\n    label: tradesItem.name,\n    data: tradesItem.data,\n  }],\n});\n\nconst getConfig = (tradesItem: TradesItem): ChartConfiguration => {\n  return {\n    type: 'line',\n    data: getChartData(tradesItem),\n    options: {\n      responsive: true,\n      interaction: {\n        intersect: false,\n      },\n      scales: {\n        x: {\n          display: true,\n          grid: {\n            lineWidth: 0.5,\n            borderColor: '#ffffff',\n            drawOnChartArea: false,\n          },\n          ticks: {\n            autoSkipPadding: 16,\n            maxRotation: 0,\n            font: {\n              family: 'Recursive',\n              size: 10,\n              weight: '300',\n            },\n            color: '#ffffff',\n          },\n        },\n        y: {\n          display: true,\n          grid: {\n            lineWidth: 0.5,\n            borderColor: '#ffffff',\n            drawOnChartArea: false,\n          },\n          ticks: {\n            autoSkipPadding: 16,\n            font: {\n              family: 'Recursive',\n              size: 10,\n              weight: '300',\n            },\n            color: '#ffffff',\n          },\n        }\n      },\n      elements: {\n        line: {\n          cubicInterpolationMode: 'monotone',\n          fill: {\n            target: 'origin',\n            above: 'rgba(255, 212, 248, 0.05)',\n          },\n          borderWidth: 1,\n          borderColor: '#ff00d6',\n        },\n        point: {\n          radius: 2,\n          hoverRadius: 4,\n          borderColor: '#008c99',\n          backgroundColor: 'rgba(255, 255, 255, 0.4)',\n        },\n      },\n      plugins: {\n        legend: {\n          display: false,\n        },\n        tooltip: {\n          titleFont: {\n            family: 'Recursive',\n          },\n          bodyFont: {\n            family: 'Recursive',\n          },\n          displayColors: false,\n        },\n      },\n      animation: {\n        duration: 0,\n      },\n    },\n  };\n};\n\nfunction ChartComponent({ name, labels, data }: TradesItem): JSX.Element {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<any>(null);\n\n  useEffect(() => {\n    const ctx = canvasRef.current?.getContext('2d');\n    if (ctx) {\n      chartRef.current = new Chart(ctx, getConfig({ name, labels, data }));\n    }\n  },[]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n    chartRef.current.data = getChartData({ name, labels, data });\n    chartRef.current.update();\n  });\n\n  return (\n    <li className=\"box rounded p-3 mb-3\">\n      <h2 className=\"pb-3 text-shadow-primary\">{name} - USD</h2>\n      <canvas className=\"chart__canvas\" ref={canvasRef}></canvas>\n    </li>\n  );\n}\n\nconst isEqual = (prevProps: TradesItem, nextProps: TradesItem) => {\n  if (prevProps.labels.length !== nextProps.labels.length) return false;\n\n  for (let i = 0; i <= prevProps.labels.length; i++) {\n    if (prevProps.labels[i] !== nextProps.labels[i]) return false;\n  }\n\n  return true;\n};\n\nexport default React.memo(ChartComponent, isEqual);\n","import React from 'react';\nimport { useTradesContext } from '../../hooks/Context';\nimport Chart from '../Chart/Chart';\n\nexport default function ChartList (): JSX.Element {\n  const {trades} = useTradesContext();\n\n  return (\n    <ul className=\"list-reset\">\n      { Object.keys(trades.currencies).map((symbol) => {\n          if (trades.active.has(symbol)) {\n            const currency = trades.currencies[symbol];\n            return <Chart\n                      key={symbol}\n                      name={currency.name}\n                      labels={currency.labels}\n                      data={currency.data}\n                    />\n          }\n        })\n      }\n    </ul>\n  );\n}\n","import React, { ChangeEvent } from 'react';\nimport { setCharts } from '../../hooks/Context';\n\ninterface Props {\n  symbol: string,\n  name: string,\n  checked: boolean,\n  setCharts: setCharts,\n}\n\nexport default function Checkbox ({symbol, name, checked, setCharts}: Props): JSX.Element {\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    evt.target.blur();\n    setCharts({symbol, active: !checked})\n  };\n\n  return (\n    <li className=\"list-group-item me-2 mb-2\">\n      <input\n        className=\"btn-check\"\n        id={`checkbox-${symbol}`}\n        onChange={handleChange}\n        checked={checked}\n        type=\"checkbox\"\n      />\n      <label className=\"btn btn-outline-primary\" htmlFor={`checkbox-${symbol}`}>{name}</label>\n    </li>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { useTradesContext } from '../../hooks/Context';\nimport Checkbox from '../Checkbox/Checkbox';\n\nexport default function Controls (): JSX.Element {\n  const {trades, dispatch: {setCharts}} = useTradesContext();\n\n  return useMemo(() => {\n    return (\n      <form action=\"/\">\n        <h3 className=\"visually-hidden\">Choose currencies to show</h3>\n        <ul className=\"list-group list-group-horizontal flex-wrap\">\n          {\n            Object.keys(trades.currencies).map((symbol) => (\n              <Checkbox\n                symbol={symbol}\n                name={trades.currencies[symbol].name}\n                key={symbol}\n                checked={trades.active.has(symbol)}\n                setCharts={setCharts}\n              />\n            ))\n          }\n        </ul>\n      </form>\n    );\n  }, [trades.active.size]);\n}\n","import React from 'react';\n\nimport { TradesContextProvider } from './hooks/Context';\n\nimport TopList from './components/TopList/TopList';\nimport WsLight from './components/WsLight/WsLight';\nimport ChartList from './components/ChartList/ChartList';\nimport Controls from './components/Controls/Controls';\n\nexport default function App() {\n  return (\n    <TradesContextProvider>\n      <div className=\"d-flex flex-column min-vh-100\">\n        <header className=\"mb-3 py-1 box overflow-hidden\">\n          <div className=\"marquee marquee-line\">\n            <TopList/>\n          </div>\n        </header>\n        <main className=\"container flex-grow-1 z-index-1\">\n          <h1 className=\"box p-3 mb-3 rounded text-shadow-secondary\">Cryptocurrency trades</h1>\n          <div className=\"row row-cols-1 g-3\">\n            <section className=\"col col-lg-3 mb-lg-3\">\n              <div className=\"position-sticky top-1 box rounded p-3\">\n                <h2 className=\"pb-3 text-shadow-primary\">Active charts</h2>\n                <Controls/>\n              </div>\n            </section>\n            <section className=\"col col-lg-9\">\n              <h2 className=\"visually-hidden\">Charts</h2>\n              <ChartList/>\n            </section>\n          </div>\n          <WsLight/>\n        </main>\n        <footer className=\"box pt-2 pb-5 pb-sm-2\">\n          <div className=\"container text-center\">\n            <a className=\"text-shadow-secondary px-3 animate-font\" href=\"https://etpotato.com/\" target=\"_blank\" rel=\"noreferrer\">etpotato.com</a>\n          </div>\n        </footer>\n      </div>\n    </TradesContextProvider>\n  );\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\n\nimport './styles/index.scss';\n\nrender(<App />, document.getElementById('root'));\n"],"names":["APP","TRADES_LIMIT","SOCKET_URL","SOCKET_TIMEOUT","CURRENCY_NAME","AVAXUSD","AXSUSD","BNBUSD","XBTUSD","BCHUSD","ADAUSD","LINKUSD","DOGEUSD","EOSUSD","ETHUSD","LTCUSD","DOTUSD","XRPUSD","SOLUSD","DEFAULT_CHARTS","ACTIONS","SET_TRADES","SET_CHARTS","pingTimeout","isReconnect","getState","prevState","currencies","Object","keys","state","active","Set","currency","name","labels","data","reducer","action","type","newData","payload","Array","isArray","newState","forEach","item","prevLabels","symbol","prevData","length","price","Date","timestamp","toLocaleTimeString","push","splice","add","Error","defaultTrades","defaultDispatch","setTrades","dispatch","setCharts","TradesContext","isWsAlive","trades","TradesContextProvider","children","useReducer","value","useState","setIsWsAlive","onWsClose","clearTimeout","setTimeout","initWebsocket","socket","WebSocket","ping","send","onopen","JSON","stringify","op","args","map","onmessage","evt","parse","err","console","error","close","onerror","onclose","useEffect","useWebsocket","Provider","useTradesContext","useContext","TopItem","className","key","prevProps","nextProps","TopList","WsLight","useMemo","style","backgroundColor","getChartData","tradesItem","datasets","label","ChartComponent","canvasRef","useRef","chartRef","ctx","current","getContext","options","responsive","interaction","intersect","scales","x","display","grid","lineWidth","borderColor","drawOnChartArea","ticks","autoSkipPadding","maxRotation","font","family","size","weight","color","y","elements","line","cubicInterpolationMode","fill","target","above","borderWidth","point","radius","hoverRadius","plugins","legend","tooltip","titleFont","bodyFont","displayColors","animation","duration","update","ref","isEqual","i","ChartList","has","Chart","Checkbox","checked","id","onChange","blur","htmlFor","Controls","App","href","rel","render","document","getElementById"],"sourceRoot":""}